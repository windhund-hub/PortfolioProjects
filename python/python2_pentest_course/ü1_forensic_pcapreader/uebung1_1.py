# Untersuchung der Kommunikation von digitalen Paketen
import dpkt
import socket

# untersucht eine uebergebene *.pcap-Datei nach IP-Adressen und zaehlt die Pakete
# @param pcap: pcap-Datei 
def printPcap(pcap):
    counter = 0
    for (timestamp, buf) in pcap:
        try:
            eth = dpkt.ethernet.Ethernet(buf)
            # HochzÃ¤hlen des Paket-Zaehlers
            counter +=1
            ip = eth.data
            src = socket.inet_ntoa(ip.src)
            dst = socket.inet_ntoa(ip.dst)
            print '[+] Src: ' + src + ' --> Dst: ' + dst
        except:
            pass
    print "Der Mitschnitt beinhaltet %s Pakete." %counter

# oeffnet pcap-Datei und initialisiert Objekt
def main():
    f = open('capture.pcap')
    # pcap wird initialisiert
    pcap = dpkt.pcap.Reader(f)
    printPcap(pcap)
    
if __name__ == '__main__':
    main()